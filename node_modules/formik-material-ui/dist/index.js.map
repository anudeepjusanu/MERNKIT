{"version":3,"file":"index.js","sources":["../src/TextField.tsx","../src/Switch.tsx","../src/Checkbox.tsx","../src/CheckboxWithLabel.tsx","../src/Select.tsx","../src/SimpleFileUpload.tsx","../src/RadioGroup.tsx","../src/InputBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core/TextField';\nimport { FieldProps, getIn } from 'formik';\n\nexport type TextFieldProps = FieldProps &\n  Omit<MuiTextFieldProps, 'error' | 'name' | 'onChange' | 'value'>;\n\nexport const fieldToTextField = ({\n  field,\n  form,\n  variant = 'standard',\n  disabled,\n  ...props\n}: TextFieldProps): MuiTextFieldProps => {\n  const { name } = field;\n  const { touched, errors, isSubmitting } = form;\n\n  const fieldError = getIn(errors, name);\n  const showError = getIn(touched, name) && !!fieldError;\n\n  return {\n    ...props,\n    ...field,\n    variant,\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled != undefined ? disabled : isSubmitting,\n  };\n};\n\nexport const TextField: React.ComponentType<TextFieldProps> = ({\n  children,\n  ...props\n}: TextFieldProps) => (\n  <MuiTextField {...fieldToTextField(props)}>{children}</MuiTextField>\n);\n\nTextField.displayName = 'FormikMaterialUITextField';\n","import * as React from 'react';\nimport MuiSwitch, {\n  SwitchProps as MuiSwitchProps,\n} from '@material-ui/core/Switch';\nimport { FieldProps } from 'formik';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      'form' | 'name' | 'onChange' | 'value' | 'defaultChecked'\n    > {}\n\nexport const fieldToSwitch = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: SwitchProps): MuiSwitchProps => {\n  return {\n    disabled: disabled != undefined ? disabled : isSubmitting,\n    ...props,\n    ...field,\n    value: field.name,\n    checked: field.value,\n  };\n};\n\nexport const Switch: React.ComponentType<SwitchProps> = (\n  props: SwitchProps\n) => <MuiSwitch {...fieldToSwitch(props)} />;\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n","import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@material-ui/core/Checkbox';\nimport { FieldProps } from 'formik';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      'form' | 'checked' | 'defaultChecked' | 'name' | 'onChange' | 'value'\n    > {}\n\nexport const fieldToCheckbox = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: CheckboxProps): MuiCheckboxProps => {\n  return {\n    disabled: disabled != undefined ? disabled : isSubmitting,\n    ...props,\n    ...field,\n    // TODO handle indeterminate\n    checked: field.value,\n    value: field.value ? 'checked' : '',\n  };\n};\n\nexport const Checkbox: React.ComponentType<CheckboxProps> = (\n  props: CheckboxProps\n) => <MuiCheckbox {...fieldToCheckbox(props)} />;\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n","import * as React from 'react';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel, {\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from '@material-ui/core/FormControlLabel';\n\nimport { CheckboxProps, fieldToCheckbox } from './Checkbox';\n\n/**\n * Exclude props that are passed directly to the control\n * https://github.com/mui-org/material-ui/blob/v3.1.1/packages/material-ui/src/FormControlLabel/FormControlLabel.js#L71\n */\nexport interface CheckboxWithLabelProps extends CheckboxProps {\n  Label: Omit<\n    MuiFormControlLabelProps,\n    'checked' | 'name' | 'onChange' | 'value' | 'inputRef'\n  >;\n}\n\nexport const CheckboxWithLabel: React.ComponentType<CheckboxWithLabelProps> = ({\n  Label,\n  ...props\n}) => (\n  <FormControlLabel\n    control={<MuiCheckbox {...fieldToCheckbox(props)} />}\n    {...Label}\n  />\n);\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n","import * as React from 'react';\nimport MuiSelect, {\n  SelectProps as MuiSelectProps,\n} from '@material-ui/core/Select';\nimport { FieldProps } from 'formik';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'value'> {}\n\nexport const fieldToSelect = ({\n  field,\n  form: { isSubmitting, setFieldValue },\n  disabled,\n  ...props\n}: SelectProps): MuiSelectProps => {\n  const onChange = React.useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      // Special case for multiple and native\n      if (props.multiple && props.native) {\n        const { options } = event.target as HTMLSelectElement;\n        const value: string[] = [];\n        for (let i = 0, l = options.length; i < l; i += 1) {\n          if (options[i].selected) {\n            value.push(options[i].value);\n          }\n        }\n\n        setFieldValue(field.name, value);\n      } else {\n        field.onChange(event);\n      }\n    },\n    [field.name, props.multiple, props.native]\n  );\n\n  return {\n    disabled: disabled != undefined ? disabled : isSubmitting,\n    ...props,\n    ...field,\n    onChange,\n  };\n};\n\nexport const Select: React.ComponentType<SelectProps> = (\n  props: SelectProps\n) => <MuiSelect {...fieldToSelect(props)} />;\n\nSelect.displayName = 'FormikMaterialUISelect';\n","import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel, { InputLabelProps } from '@material-ui/core/InputLabel';\nimport Input, { InputProps } from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  disabled?: boolean;\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'onChange'>;\n  InputLabelProps?: InputLabelProps;\n}\n\nexport const SimpleFileUpload = ({\n  label,\n  field,\n  form: { touched, errors, isSubmitting, setFieldValue },\n  disabled = false,\n  InputProps: inputProps,\n  InputLabelProps: inputLabelProps,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <div>\n      <FormControl>\n        {label && (\n          <InputLabel shrink error={!!error} {...inputLabelProps}>\n            {label}\n          </InputLabel>\n        )}\n        <Input\n          error={!!error}\n          inputProps={{\n            type: 'file',\n            disabled: disabled || isSubmitting,\n            name: field.name,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onChange: (event: React.ChangeEvent<any>) => {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            },\n          }}\n          {...inputProps}\n        />\n        {error && <FormHelperText error>{error}</FormHelperText>}\n      </FormControl>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport MuiRadioGroup, {\n  RadioGroupProps as MuiRadioGroupProps,\n} from '@material-ui/core/RadioGroup';\nimport { FieldProps } from 'formik';\n\nexport interface RadioGroupProps\n  extends Omit<MuiRadioGroupProps, 'name' | 'onChange' | 'value'>,\n    FieldProps {}\n\nexport const fieldToRadioGroup = ({\n  field,\n  // Exclude Form\n  form,\n  ...props\n}: RadioGroupProps): MuiRadioGroupProps => ({\n  ...props,\n  ...field,\n});\n\nexport const RadioGroup: React.ComponentType<RadioGroupProps> = (\n  props: RadioGroupProps\n) => {\n  return <MuiRadioGroup {...fieldToRadioGroup(props)} />;\n};\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\n","import * as React from 'react';\nimport MuiInputBase, {\n  InputBaseProps as MuiInputBaseProps,\n} from '@material-ui/core/InputBase';\nimport { FieldProps } from 'formik';\n\nexport interface InputBaseProps\n  extends FieldProps,\n    Omit<MuiInputBaseProps, 'name' | 'onChange' | 'value'> {}\n\nexport const fieldToInputBase = ({\n  field,\n  form: { isSubmitting },\n  disabled,\n  ...props\n}: InputBaseProps): MuiInputBaseProps => {\n  return {\n    disabled: disabled != undefined ? disabled : isSubmitting,\n    ...props,\n    ...field,\n    value: field.name,\n  };\n};\n\nexport const InputBase: React.ComponentType<InputBaseProps> = (\n  props: InputBaseProps\n) => <MuiInputBase {...fieldToInputBase(props)} />;\n\nInputBase.displayName = 'FormikMaterialUIInputBase';\n"],"names":["getIn","React.createElement","React.useCallback"],"mappings":"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"}